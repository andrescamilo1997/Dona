// Generated by view binder compiler. Do not edit!
package com.misiontic2022.dona.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.misiontic2022.dona.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAuthBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LinearLayout authLayout;

  @NonNull
  public final EditText emailEditText;

  @NonNull
  public final Button googleButton;

  @NonNull
  public final ImageView imageView2;

  @NonNull
  public final Button logInButton;

  @NonNull
  public final EditText passwordEditText;

  @NonNull
  public final Button signUpButton;

  private ActivityAuthBinding(@NonNull ConstraintLayout rootView, @NonNull LinearLayout authLayout,
      @NonNull EditText emailEditText, @NonNull Button googleButton, @NonNull ImageView imageView2,
      @NonNull Button logInButton, @NonNull EditText passwordEditText,
      @NonNull Button signUpButton) {
    this.rootView = rootView;
    this.authLayout = authLayout;
    this.emailEditText = emailEditText;
    this.googleButton = googleButton;
    this.imageView2 = imageView2;
    this.logInButton = logInButton;
    this.passwordEditText = passwordEditText;
    this.signUpButton = signUpButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAuthBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAuthBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_auth, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAuthBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.authLayout;
      LinearLayout authLayout = ViewBindings.findChildViewById(rootView, id);
      if (authLayout == null) {
        break missingId;
      }

      id = R.id.emailEditText;
      EditText emailEditText = ViewBindings.findChildViewById(rootView, id);
      if (emailEditText == null) {
        break missingId;
      }

      id = R.id.googleButton;
      Button googleButton = ViewBindings.findChildViewById(rootView, id);
      if (googleButton == null) {
        break missingId;
      }

      id = R.id.imageView2;
      ImageView imageView2 = ViewBindings.findChildViewById(rootView, id);
      if (imageView2 == null) {
        break missingId;
      }

      id = R.id.logInButton;
      Button logInButton = ViewBindings.findChildViewById(rootView, id);
      if (logInButton == null) {
        break missingId;
      }

      id = R.id.passwordEditText;
      EditText passwordEditText = ViewBindings.findChildViewById(rootView, id);
      if (passwordEditText == null) {
        break missingId;
      }

      id = R.id.signUpButton;
      Button signUpButton = ViewBindings.findChildViewById(rootView, id);
      if (signUpButton == null) {
        break missingId;
      }

      return new ActivityAuthBinding((ConstraintLayout) rootView, authLayout, emailEditText,
          googleButton, imageView2, logInButton, passwordEditText, signUpButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
